{"cursor":"38776","size":15,"audio":[],"currentlang":"en","article":"\nIn computer programming, a 'subroutine' is a sequence of program instructions\nthat perform a specific task, packaged as a unit. This unit can then be used in\nprograms wherever that particular task should be performed. Subprograms may be\ndefined within programs, or separately in libraries that can be used by\nmultiple programs.\n\nIn different programming languages a subroutine may be called a 'procedure', a\n'function', a 'routine', a '[[method (computing)|method]]', or a 'subprogram'.\nThe generic term 'callable unit' is sometimes used {{Cite web |author= U.S.\nElection Assistance Commission |title= Definitions of Words with Special\nMeanings |work= Voluntary Voting System Guidelines |date= |year= 2007 |url=\nhttp://www.eac.gov/vvsg/glossary.aspx |accessdate= 2013-01-14 |authorlink=\nElection Assistance Commission}} .\n\nAs the name subprogram suggests, a subroutine behaves in much the same way as a\ncomputer program that is used as one step in a larger program or another\nsubprogram. A subroutine is often coded so that it can be started (called)\nseveral times and/or from several places during one execution of the program,\nincluding from other subroutines, and then branch back (return) to the next\ninstruction after the call once the subroutine's task is done.\n\nMaurice Wilkes, David Wheeler, and Stanley Gill are credited with the invention\nof this concept, which they termed a closed subroutine {{cite book |last1=\nWilkes |first1= M. V. |last2= Wheeler |first2= D. J. |last3= Gill |first3=S.\n|title= Preparation of Programs for an Electronic Digital Computer |publisher=\nAddison-Wesley |year= 1951 }} , contrasted with an open subroutine or\nmacro .\n\nSubroutines are a powerful programming tool, and the\nsyntax of many programming languages includes support for writing and using\nthem. Judicious use of subroutines (for example, through the structured\nprogramming approach) will often substantially reduce the cost of developing and\nmaintaining a large program, while increasing its quality and reliability. Subroutines, often collected into libraries, are an\nimportant mechanism for sharing and trading software. The discipline of object-\noriented programming is based on objects and methods (which are subroutines\nattached to these objects or object classes).\n\nIn the compiling method called threaded code, the executable program is\nbasically a sequence of subroutine calls.\n","linknr":389,"url":"Function_(computer_science)","recorded":1362666285,"links":49,"instances":["programming_language","computer_science","mathematics","computing","programming_language","mathematics","programming_language","programming","programming","programming_language","programming_language","computer_programming","programming_languages","computer_scientist","programming","computer_science","computer_science","data_structure","computer_science","computer_programming","computer_science","programming_language","computing","programming","programming_language","computer_scientist","computer_programming","computer_science"],"pdf":[],"categories":["Source code","Articles with example C code","University of Cambridge Computer Laboratory","Holism","Programming constructs","Subroutines|"],"headings":["Main concepts","Language support","Advantages","Disadvantages","History","C and C++ examples","Visual Basic 6 examples","PL/I example","Local variables, recursion and reentrancy","Overloading","Closures","Conventions","Optimization of subroutine calls","See also","References"],"image":["//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/37px-Wiktionary-logo-en.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["library","computer_science"],["david_wheeler","computer_scientist"],["macro","computer_science"],["syntax","programming_languages"],["library","computing"],["object","computer_science"],["method","computer_programming"],["class","computer_programming"],["function","mathematics"],["matrix","mathematics"],["recursion","computer_science"],["scope","computer_science"],["library","computing"],["object","computer_science"],["class","computer_programming"],["pascal","programming_language"],["ada","programming_language"],["expression","programming"],["statement","programming"],["c","programming_language"],["lisp","programming_language"],["haskell","programming_language"],["c","programming_language"],["c_sharp","programming_language"],["decomposition","computer_science"],["housekeeping","computing"],["macro","computer_science"],["stack","data_structure"],["stack","data_structure"],["forth","programming_language"],["garbage_collection","computer_science"],["recursion","computer_science"],["c","programming_language"],["class","computer_programming"],["c","programming_language"],["pascal","programming_language"],["ada","programming_language"],["scope","programming"],["thread","computer_science"],["thread","computer_science"],["object","computer_science"],["john_mccarthy","computer_scientist"],["parameter","computer_programming"],["exception","programming"],["function","mathematics"],["method","computer_programming"]],"members":["forth","object","function","library","lisp","matrix","pascal","statement","expression","ada","haskell","method","syntax","john_mccarthy","scope","recursion","garbage_collection","stack","decomposition","parameter","thread","c","housekeeping","exception","c_sharp","david_wheeler","class","macro"],"related":["Computer_programming","Library_(computer_science)","Voluntary_Voting_System_Guidelines","Maurice_Wilkes","David_Wheeler_(computer_scientist)","Stanley_Gill","Macro_(computer_science)","Programming","Syntax_(programming_languages)","Programming_language","Structured_programming","Library_(computing)","Object-oriented_programming","Object_(computer_science)","Method_(computer_programming)","Class_(computer_programming)","Compiler","Threaded_code","Function_(mathematics)","Logarithm","Determinant","Matrix_(mathematics)","Data_structure","Computer_data_storage","Peripheral_device","Computer_file","Pseudorandom_number_generator","Imperative_programming","Recursion_(computer_science)","Mathematical_induction","Divide_and_conquer_algorithm","Boolean-valued_function","Logic_programming","High-level_programming_language","Identifier","Data_type","Scope_(computer_science)","Temporary_variable","Return_statement","Exception_handling","Modular_programming","Library_(computing)","Object_(computer_science)","Class_(computer_programming)","Programming_language","Visual_Basic_.NET","Pascal_(programming_language)","Fortran","Ada_(programming_language)","Expression_(programming)","Statement_(programming)","C_(programming_language)","Lisp_(programming_language)","Haskell_(programming_language)","Programming_language","C_(programming_language)","C++","C_Sharp_(programming_language)","Compiler","Function_prologue","Decomposition_(computer_science)","Structured_programming","Data_structure","Duplicate_code","Code_reuse","Information_hiding","Computational_overhead","Housekeeping_(computing)","Function_prologue","General_purpose_register","Macro_(computer_science)","Machine_code","Assembly_language","Self-modifying_code","Operand","Branch_instruction","Punched_tape","Punched_card","Return_statement","Processor_register","Computational_overhead","System/360","Stack_(data_structure)","HP_2100","HP_2100_assembly_language","Lotus_1-2-3","Circular_reference","IBM_PC","Link_register","Call_stack","Stack_(data_structure)","Reduced_instruction_set_computing","Very_long_instruction_word","Forth_(programming_language)","Garbage_collection_(computer_science)","Recursion_(computer_science)","Stack_overflow","C_(programming_language)","C++","Class_(computer_programming)","Visual_Basic","Variant_type","PL/I","Virtual_memory","Return_address","Recursion","Fibonacci","Fortran","PDP-8","ALGOL","PL/1","C_(programming_language)","Call_stack","Pascal_(programming_language)","Ada_(programming_language)","Nested_function","Scope_(programming)","Thread_(computer_science)","IBM","CICS","Transaction_processing_system","Thread_(computer_science)","Coroutine","Lazy_evaluation","Strong_typing","Object-oriented_programming","Method_overloading","C++","Object_(computer_science)","John_McCarthy_(computer_scientist)","Verb","Adjective","Noun","Software_maintenance","Modular_programming","Global_variable","Code_refactoring","Parameter_(computer_programming)","IBM_System/360","Branch_table","System/360","Assembly_language","Computational_overhead","Exception_(programming)","Dynamic_dispatch","Undecidable_problem","Call_site","Compiler","Code_optimization","Function_(mathematics)","Method_(computer_programming)","Evaluation_strategy","Modular_programming","Transclusion","Operator_overloading","Functional_programming","Command-query_separation","Coroutine","Event_handler","Interrupt"]}