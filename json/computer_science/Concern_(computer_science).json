{"cursor":"3184","size":15,"audio":[],"currentlang":"en","article":"\n\n:\nIn computer science, a 'concern' is a particular set of information that has an\neffect on the code of a computer program. A concern can be as general as the\ndetails of database interaction or as specific as performing a primitive\ncalculation, depending on the level of conversation between developers and the\nprogram being discussed. IBM uses the term concern space to describe the\nsectioning of conceptual\ninformation. [http://www.research.ibm.com/hyperspace/ConcernSpaces.htm\nConcern Spaces at IBM]\n\nUsually the code can be separated into logical sections, each addressing\nseparate concerns, and so it hides the need for a given section to know\nparticular information addressed by a different section. This leads to a modular\nprogram. Edsger W. Dijkstra coined the term \"separation of\nconcerns\" {{Citation\n  | last = Dijkstra first = Edsger W. author-link = Edsger W. Dijkstra editor-\n  | last = Dijkstra editor-first = Edsger W. contribution = On the role of\n  | scientific thought contribution-url =\n  | http://www.cs.utexas.edu/users/EWD/transcriptions/EWD04xx/EWD447.html title\n  | = Selected writings on Computing: A Personal Perspective year = 1982 pages =\n  | 60â66 publisher = Springer-Verlag New York, Inc. place = New York, NY, USA\n  | isbn = 0-387-90652-5\n}} to describe the mentality behind this modularization, which allows the\nprogrammer to reduce the complexity of the system being designed. Two different\nconcerns that intermingle in the same section of code are called \"highly\ncoupled\". Sometimes the chosen module divisions do not allow for one concern to\nbe completely separated from another, resulting in cross-cutting\nconcerns. Mendhekar, Anurag, Gregor Kiczales, and John Lamping. [http://www2.parc.com/csl/groups/sda/publications/papers/PARC-AOP-\nRG97/ \"RG: A Case-Study For Aspect-Oriented Programming\"] Xerox Palo Alto\nResearch Center. Feb 1997. The various programming paradigms address the\nissue of cross-cutting concerns to different degrees. Data logging is a common\ncross-cutting concern, being used in many other parts of the program other than\nthe particular module(s) that actually log the data. Since changes to the\nlogging code can affect other sections, it could introduce bugs in the operation\nof the program.\n\nParadigms that specifically address the issue of concern separation:\n\n* Object-oriented programming, describing concerns as objects\n* Functional programming, describing concerns as functions\n* Aspect-oriented software development, treating concerns and their interaction\n  as constructs of their own standing\n","linknr":98,"url":"Concern_(computer_science)","recorded":1362674346,"links":11,"instances":["programming","computers","computer_science"],"pdf":[],"categories":["Software engineering terminology"],"headings":["See also","References"],"image":["//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["modularity","programming"],["coupling","computer_science"],["issue","computers"]],"members":["modularity","issue","coupling"],"related":["Computer_science","Computer_program","Database","Modularity_(programming)","Edsger_W._Dijkstra","Separation_of_concerns","Designed","Coupling_(computer_science)","Cross-cutting_concern","Programming_paradigm","Data_logging","Computer_bug","Object-oriented_programming","Functional_programming","Aspect-oriented_software_development","Issue_(computers)"]}