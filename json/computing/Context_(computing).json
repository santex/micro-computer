{"cursor":"2548","size":15,"audio":[],"currentlang":"en","article":"In computer science, a task 'context' (process, thread ...) is the minimal set\nof data used by this task that must be saved to allow a task interruption at a\ngiven date, and a continuation of this task at the point it has been interrupted\nand at an arbitrary future date. The concept of context assumes significance in\nthe case of interruptible tasks, wherein upon being interrupted the processor\nsaves the context and proceeds to serve the Interrupt service routine. Thus the\nsmaller the context the smaller is the latency.\n\nThese data are located in:\n* Processor registers\n* Memory used by the task\n* On some Operating systems, control registers used by the system to\n  manage the task\n\nThe storage memory (files) is not concerned by the \"task context\" in the case of\na context switch; even if this can be stored for some uses (checkpointing).\n","linknr":96,"url":"Context_(computing)","recorded":1362553742,"links":15,"instances":["computing","computer_science","c_programming_language","computer_science","computing"],"pdf":[],"categories":["Process (computing)"],"headings":["Context types","References","See also","External links"],"image":["//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["process","computing"],["thread","computer_science"],["struct","c_programming_language"],["garbage_collector","computing"],["state","computer_science"]],"members":["garbage_collector","thread","struct","state","process"],"related":["Process_(computing)","Thread_(computer_science)","Interrupt","Interrupt_service_routine","Operating_systems","Context_switch","Array_data_type","Struct_(C_programming_language)","Garbage_collector_(computing)","State_(computer_science)"]}